@{
    ViewBag.Title = "ClassRoom";
}

<!DOCTYPE html>
<html>
<head>
    <title>SignalR Simple Chat</title>
    <link rel="shortcut icon" href="~/PageResources/Images/Logos/logo1.jpg">
    <!--Bootstrap-->
    <link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.2/css/bootstrap.min.css">
    <link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.2/css/bootstrap-theme.min.css">
    <!--Sweet Alert-->
    <link rel="stylesheet" type="text/css" href="~/Vendors/sweetalert/lib/sweet-alert.css">
    <!--Custom-->
    <link rel="stylesheet" href="~/Styles/base.css">
</head>
<body>
    <div class="container">
        
        <div class="row">
            <div class="col-md-5 col-md-offset-1">
                <img class="img-responsive img-rounded" src="~/PageResources/Images/Logos/logo1.jpg">
            </div>
            <div id="register-panel" class="col-md-5">
                <form>
                    <input name="username" type="text"  placeholder="Username" />
                    <input name="password" type="password" placeholder="Password" />
                    <input name="password-again" type="password" placeholder="Password Again" />
                    <input name="name" type="text" placeholder="Your name(only required for professor)" />
                    <label>You are:</label>
                    <div class="clearfix radiolist">
                        <p>
                            <input name="role" type="radio" value="professor" />
                            <span class="radiolist-text">Professor</span>
                            <a class="radio-select" href="#">Select</a>
                            <a class="radio-deselect" href="#">Cancel</a>
                        </p>
                        <p>
                            <input name="role" type="radio" value="student" />
                            <span class="radiolist-text">Student</span>
                            <a class="radio-select" href="#">Select</a>
                            <a class="radio-deselect" href="#">Cancel</a>
                        </p>
                    </div>
                    
                    <input type="button" name="submit" value="Register" />
                </form>
            </div>
        </div>

        <div class="row">
            <div id="question-panel" class="col-md-8 col-md-offset-2">
                <form>
                    <input id="question" type="text" placeholder="Question" />
                    <input id="toss-question" type="button" name="submit" value="Toss" />
                </form>
            </div>
        </div>

        <div class="row">
            <div id="professor-panel" class="col-md-8 col-md-offset-2">
                <form>
                    <input name="classname" type="text" placeholder="class name" />
                    <input name="code" type="text" placeholder="code" />
                    <input name="start-class" type="button" value="Start Class" />
                    <input name="end-class" type="button" value="End Class" />
                </form>
                <input name="username" type="hidden" />
                
            </div>
        </div>

        <div class="row">
            <div id="student-panel" class="col-md-8 col-md-offset-2">
                <form>
                    <input name="code" type="text" placeholder="code" />
                    <input name="submit" type="button" value="Join" />
                </form>
                <input name="username" type="hidden" />
                <input name="prof-conn-id" type="hidden" />
            </div>
        </div>

        <div class="row">
            <div id="questions-panel" class="col-md-8 col-md-offset-2">
                <h1>Questions</h1>
                <div class="panel panel-default">
                    <ul id="questions">
                    </ul>
                </div>
            </div>
        </div>

        <div id="login-panel" class="row">
            <div id="student-login-panel" class="col-md-5 col-md-offset-1">
                <h1>Student</h1>
                <form>
                    <input name="username" type="text" placeholder="Username" />
                    <input name="password" type="password" placeholder="Password" />
                    <input name="submit" type="button" value="Log in" />
                </form>
            </div>
            <div id="professor-login-panel" class="col-md-5">
                <h1>Professor</h1>
                <form>
                    <input name="username" type="text" placeholder="Username" />
                    <input name="password" type="password" placeholder="Password" />
                    <input name="submit" type="button" value="Log in" />
                </form>
            </div>
        </div>

        <div class="row">
            <div id="about-panel" class="col-md-8 col-md-offset-2">
                <h3>About:</h3>
                <p>Question tosser is a web application that helps shy students participate more freely in the classroom and helps professors build more interactive classroom atmosphere. During a class, after the students and the professor log into the application, students can "toss" a question to the professor, who will receive the message immediately along with a loud notification sound. All the questions will be saved so that after class the professor can answer questions individually to the students who asked the questions.</p>
                <p>Question Tosser is built with ASP.NET MVC and SignalR technologies with WebSockets under the cover.</p> 
                <p>Other technologies used include: C#, Javascript, AJAX, JQuery, MySQL, etc.</p>
                <p>Github repo: https://github.com/mikeogod/QuestionTosser</p>
             
            </div>
        </div>

        <div class="row">
            <div id="logout-panel" class="col-md-8 col-md-offset-2">
                <form>
                    <input name="logout" type="button" value="logout"/>
                </form>
            </div>
        </div>

        <audio id="question-audio">
            <source src="~/PageResources/Audios/alert1.mp3" type="audio/mpeg">
            Your browser does not support the audio tag.
        </audio>

    </div>
    
    <!--Script references. -->
    <!--Reference the jQuery library. -->
    <script src="~/Scripts/jquery-1.11.1.min.js"></script>
    <script src="~/Scripts/jquery-ui.min.js"></script>
    <!--Bootstrap-->
    <script src="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.2/js/bootstrap.min.js"></script>
    <!--Sweet Alert-->
    <script src="~/Vendors/sweetalert/lib/sweet-alert.js"></script>
    <!--Reference the SignalR library. -->
    <script src="~/Scripts/jquery.signalR-2.2.0.min.js"></script>
    <!--Reference the autogenerated SignalR hub script. -->
    <script src="~/signalr/hubs"></script>
    <!--Custom-->
    <script src="~/Scripts/main.js"></script>
    <script type="text/javascript">

        


        var QuestionTosser = QuestionTosser || {};

        
            
        QuestionTosser.Main=$(function () {
            
            
            @{
                if(Session["professor"]==null && Session["student"]==null)
                {
                    @:QuestionTosser.AnonymousPage();
                }
                else if(Session["student"]!=null)
                {
                    @:QuestionTosser.StudentPage();
                }
                else
                {
                    @:QuestionTosser.ProfessorPage();
                }
            }

            // Declare a proxy to reference the hub. 
            var chat = $.connection.classRoomHub;
            // Create a function that the hub can call to broadcast messages.
            chat.client.postQuestion = function (q) {
                // Html encode display name and message. 
                var encodedMsg = $('<div />').text(q).html();
                // Add the message to the page. 
                $('#questions').append('<li>' + encodedMsg + '</li>');
                document.getElementById('question-audio').play();
            };
            
            var className=$("#professor-panel input[name='classname']");
            var profCode = $("#professor-panel input[name='code']");
            var profUserName = $("#professor-panel input[name='username']");
            var studCode = $("#student-panel input[name='code']");
            var profConnID = $("#student-panel input[name='prof-conn-id']");
            var studUserName = $("#student-panel input[name='username']");
            var question = $("#question");
            var registerName=$("#register-panel input[name='username']");
            var registerPass=$("#register-panel input[name='password']");
            var registerRealName=$("#register-panel input[name='name']");
            var studentLoginName = $("#student-login-panel input[name='username']");
            var studentLoginPass = $("#student-login-panel input[name='password']");
            var professorLoginName = $("#professor-login-panel input[name='username']");
            var professorLoginPass = $("#professor-login-panel input[name='password']");

            //Start class
            $("#professor-panel input[name='start-class']").on("click", function () {
                $.ajax({
                    url: "@Url.Action("StartClass", "Professor")",
                    type: "POST",
                    dataType: "json",
                    data: { classname: className.val(), code: profCode.val() },
                    success: function (data, textStatus, jqXHR) {
                        if (data["status"] == "StartClassSucceed") {
                            // Start the connection for professor
                            $.connection.hub.start().done(function () {
                                chat.server.StartClass(data["classID"]);
                                QuestionTosser.StartSucceed();
                                swal({ title: "Success!", text: "You have successfully started a class! The code:\n" + data["code"], type: "success", confirmButtonText: "Cool" });
                            });
                        }
                        else {
                            alert(data["msg"]);
                        }
                    },
                });
            });

            //End class
            $("#professor-panel input[name='end-class']").on('click', function () {
                swal({
                    title: "Are you sure?",
                    text: "You will lose all the current connections!",
                    type: "warning",
                    showCancelButton: true,
                    confirmButtonColor: "#DD6B55",
                    confirmButtonText: "Yes, delete it!",
                    cancelButtonText: "No, cancel plx!",
                    closeOnConfirm: false,
                    closeOnCancel: false
                },
                function (isConfirm)
                {
                    if (isConfirm) {
                        chat.server.DisconnectClient();
                        QuestionTosser.EndSucceed();
                        swal("Ended!", "You have ended the class", "success");
                    } else {
                        swal("Cancelled", "You can continue the class now", "error");
                    }
                });
                
            });

            //Join class
            $("#student-panel input[name='submit']").on("click", function () {
                $.ajax({
                    url: "@Url.Action("JoinClass", "Student")",
                    type: "POST",
                    dataType: "json",
                    data: { code: studCode.val() },
                    success: function (data, textStatus, jqXHR) {
                        if (data["status"] == "JoinClassSucceed") {
                            profConnID.val(data["profConnID"]);
                            // Start the connection for students
                            $.connection.hub.start().done(function () {
                                $('#toss-question').click(function () {
                                    chat.server.Toss(studUserName.val(), question.val(), profConnID.val());
                                    // Clear text box and reset focus for next question. 
                                    $('#question').val('').focus();
                                });
                            });
                            QuestionTosser.JoinSucceed();
                            swal({ title: "Success!", text: "You have successfully join the class!", type: "success", confirmButtonText: "Cool" });

                        }
                        else {
                            alert(data["msg"]);
                        }
                    },

                });
            });

            //Register
            $("#register-panel input[name='submit']").on("click", function () {
                if ($("#register-panel input[name='role'][value='professor']").prop("checked")) {
                    $.ajax({
                        url: "@Url.Action("ProfessorRegister", "Professor")",
                        type: "POST",
                        dataType: "json",
                        data: { username: registerName.val(), password: registerPass.val(), name:registerRealName.val() },
                        success: function (data, textStatus, jqXHR) {
                            if (data["status"] == "RegisterPSucceed") {
                                swal({ title: "Success!", text: "Professor, you have successfully registered!", type: "success", confirmButtonText: "Cool" });
                                QuestionTosser.ClearLoginRegisterFields();
                            }
                            else {
                                alert(data["msg"]);
                            }
                        }
                    });
                }
                else {
                    $.ajax({
                        url: "@Url.Action("StudentRegister", "Student")",
                        type: "POST",
                        dataType: "json",
                        data: { username: registerName.val(), password: registerPass.val() },
                        success: function (data, textStatus, jqXHR) {
                            if (data["status"] == "RegisterSSucceed") {
                                swal({ title: "Success!", text: "Student, you have successfully registered!", type: "success", confirmButtonText: "Cool" });
                                QuestionTosser.ClearLoginRegisterFields();
                            }
                            else {
                                alert(data["msg"]);
                            }
                        }
                    });
                }
            });

            //Student login
            $("#student-login-panel input[name='submit']").on("click", function () {
                $.ajax({
                    url: "@Url.Action("StudentLogin", "Student")",
                    type: "POST",
                    dataType: "json",
                    data: { username: studentLoginName.val(), password: studentLoginPass.val() },
                    success: function (data, textStatus, jqXHR) {
                        if (data["status"] == "LoginSSucceed") {
                            swal({ title: "Success!", text: "Student you have successfully logged in!", type: "success", confirmButtonText: "Cool" });
                            QuestionTosser.StudentPage();
                        }
                        else {
                            alert(data["msg"]);
                        }
                    }
                });
            });

            //Professor login
            $("#professor-login-panel input[name='submit']").on("click", function () {
                $.ajax({
                    url: "@Url.Action("ProfessorLogin", "Professor")",
                    type: "POST",
                    dataType: "json",
                    data: { username: professorLoginName.val(), password: professorLoginPass.val() },
                    success: function (data, textStatus, jqXHR) {
                        if (data["status"] == "LoginPSucceed") {
                            swal({ title: "Success!", text: "Professor you have successfully logged in!", type: "success", confirmButtonText: "Cool" });
                            QuestionTosser.ProfessorPage();
                        }
                        else {
                            alert(data["msg"]);
                        }
                    }
                });
            });

            //Pretty radios
            var firstRadio = $(".radiolist input[type='radio']").first();
            firstRadio.prop("checked", true);
            
            $(".radiolist .radio-select").click(
                function (event) {
                    event.preventDefault();
                    var $boxes = $(this).parent().parent().children();
                    $boxes.removeClass("selected");
                    $(this).parent().addClass("selected");
                    $(this).parent().find(":radio").prop("checked", true);
                }
            );

            $(".radiolist .radio-deselect").click(
                function (event) {
                    event.preventDefault();
                    $(this).parent().removeClass("selected");
                    $(this).parent().find(":radio").prop("checked", false);
                }
            );

            //Logout
            $("#logout-panel input[name='logout']").on('click', function () {
                $.ajax({
                    url: "@Url.Action("Logout", "Home")",
                    type: "POST",
                    dataType: "json",
                    data: { username: professorLoginName.val(), password: professorLoginPass.val() },
                    success: function (data, textStatus, jqXHR) {
                        if (data["status"] == "LogoutSucceed") {
                            swal({ title: "Logged out!", text: "You have successfully logged out!", type: null, confirmButtonText: "OK", timer: 2000 });
                            QuestionTosser.AnonymousPage();
                        }
                        else {
                            alert(data["msg"]);
                        }
                    }
                });
            });

            // End the connection.
            chat.client.stopConnection = function () {
                $.connection.hub.stop();
                swal({ title: "Disconnected!", confirmButtonText: "OK"});
            }

            // Handle errors that caused disconnection
            $.connection.hub.disconnected(function () {
                if ($.connection.hub.lastError)
                { alert("Disconnected. Reason: " + $.connection.hub.lastError.message); }
            });
        });
    </script>
</body>
</html>

